# ==
# Base
# ==
FROM node:18-alpine as base
WORKDIR /app
COPY package.json yarn.lock redwood.toml graphql.config.js .
COPY api/package.json api/
COPY web/package.json web/
ENV HUSKY=0
RUN apk add --update --no-cache openssl1.1-compat

# ==
# Build
# ==
FROM base as builder
RUN yarn install --immutable --immutable-cache \
    && find . -type f -name "*.test.tsx" -exec rm -f {} \; \
    && find . -type f -name "*.test.ts" -exec rm -f {} \;
COPY api api
COPY web web
RUN yarn rw build api web && yarn rw prisma generate

# Production Base
FROM base as production-base
RUN yarn install --immutable --immutable-cache --production \
    && yarn cache clean

# ==
# Runners
# ==
# Nginx web server
FROM nginx:alpine AS web
COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=builder /app/web/dist /usr/share/nginx/html
EXPOSE 8910
CMD ["nginx", "-g", "daemon off;"]

# API server
FROM production-base AS api
WORKDIR /app
COPY --from=builder /app/api api
COPY --from=builder /app/web web
COPY --from=builder /app/node_modules node_modules
COPY scripts scripts
COPY entrypoint.prod.sh /app/entrypoint.prod.sh
RUN chmod +x /app/entrypoint.prod.sh
EXPOSE 8911
CMD ["/app/entrypoint.prod.sh"]
