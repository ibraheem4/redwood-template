name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - auth-auth0
      - auth-dbauth-docker
      - auth-clerk
  pull_request:
    branches:
      - main
      - auth-auth0
      - auth-dbauth-docker
      - auth-clerk

jobs:
  build_test_lint:
    runs-on: ubuntu-latest
    env:
      REDWOOD_WEB_URL: ${{ secrets.REDWOOD_WEB_URL }}
      DISABLE_SIGNUP: ${{ secrets.DISABLE_SIGNUP }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      REDWOOD_API_URL: ${{ secrets.REDWOOD_API_URL }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      POSTGRES_DB_DEV: ${{ secrets.POSTGRES_DB_DEV }}
      POSTGRES_DB_TEST: ${{ secrets.POSTGRES_DB_TEST }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Capture start time
        run: echo "BUILD_START_TIME=$(date +%s)" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install Make
        run: sudo apt-get update -y && sudo apt-get install -y make
      - name: Install dependencies
        run: make install-deps-ci
      - name: Build RedwoodJS project
        run: make build-ci
      - name: Lint RedwoodJS project
        run: make lint-ci
      - name: Run web and api tests
        run: make test-ci
      - name: Record build time
        run: echo "::warning file=build.log,line=1,col=5::Build took $(($(date +%s) - $BUILD_START_TIME)) seconds."

  auto_merge_to_feature_branches:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.REPO_WORKFLOW_TOKEN }}
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Merge main into auth-auth0
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git checkout auth-auth0
        git merge main
        git push origin auth-auth0
      env:
        GIT_AUTH_TOKEN: ${{ secrets.REPO_WORKFLOW_TOKEN }}
    - name: Merge main into auth-clerk
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git checkout auth-clerk
        git merge main
        git push origin auth-clerk
      env:
        GIT_AUTH_TOKEN: ${{ secrets.REPO_WORKFLOW_TOKEN }}
    - name: Merge main into auth-dbauth-docker
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git checkout auth-dbauth-docker
        git merge main
        git push origin auth-dbauth-docker
      env:
        GIT_AUTH_TOKEN: ${{ secrets.REPO_WORKFLOW_TOKEN }}
    - name: Notify on Failure
      if: failure()
      uses: actions/github-script@v5
      with:
        script: |
          const issue_title = "Auto-merge failed";
          const issue_body = "Auto-merge of main into feature branches failed. Manual intervention required.";
          const token = process.env.REPO_WORKFLOW_TOKEN;
          const context = github.context;
          const octokit = github.getOctokit(token);
          octokit.issues.create({
            ...context.repo,
            title: issue_title,
            body: issue_body
          });
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_WORKFLOW_TOKEN }}
