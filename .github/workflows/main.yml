name: RedwoodJS App CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and Start Docker Containers
        run: |
          start_time=$(date +%s)
          docker-compose -f docker-compose.ci.yml build
          docker-compose -f docker-compose.ci.yml up -d
          end_time=$(date +%s)
          build_runtime=$((end_time - start_time))
          echo "Build Runtime: $build_runtime seconds" >> $GITHUB_WORKSPACE/build.log

      - name: Lint RedwoodJS project
        run: docker-compose -f docker-compose.ci.yml exec -T api yarn rw lint

  test:
    runs-on: ubuntu-latest
    env:
      REDWOOD_API_URL: http://api:8911
      DATABASE_URL: postgresql://postgres:password@db:5432/redwood_dev
      TEST_DATABASE_URL: postgresql://postgres:password@db:5432/redwood_test
      POSTGRES_DB_DEV: redwood_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

    steps:
      - uses: actions/checkout@v3

      - name: Build and start containers
        run: docker-compose -f docker-compose.ci.yml up -d

      - name: Run migrations (if applicable)
        run: docker-compose -f docker-compose.ci.yml exec -T api yarn rw prisma migrate deploy

      - name: Run API tests
        run: docker-compose -f docker-compose.ci.yml exec -T api yarn rw test api --no-watch

      - name: Run Web tests
        run: docker-compose -f docker-compose.ci.yml exec -T api yarn rw test web --no-watch

      - name: Publish Docker Images
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push docker-ibraheem4-nginx-web-dev:latest
          docker push docker-ibraheem4-redwood-api-dev:latest

      - name: Publish Build Information
        run: |
          cat $GITHUB_WORKSPACE/build.log
          build_runtime=$(cat $GITHUB_WORKSPACE/build.log | grep 'Build Runtime' | awk '{print $3}')
          web_image_size=$(docker images docker-ibraheem4-nginx-web-dev:latest --format "{{.Size}}")
          api_image_size=$(docker images docker-ibraheem4-redwood-api-dev:latest --format "{{.Size}}")
          echo "::warning file=build.log,line=1,col=5::Web Build: $build_runtime seconds | Web Image Size: $web_image_size | API Image Size: $api_image_size"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
