name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  REDWOOD_API_URL: ${{ secrets.REDWOOD_API_URL }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      REDWOOD_API_URL: ${{ secrets.REDWOOD_API_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker images
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml build
      - name: Start the Dockerized RedwoodJS application
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d
      - run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T api yarn rw build
      - name: Stopping the Dockerized RedwoodJS application
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml down

  lint:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      REDWOOD_API_URL: ${{ secrets.REDWOOD_API_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker images
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml build
      - name: Start the Dockerized RedwoodJS application
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d
      - run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T api yarn rw lint
      - name: Stopping the Dockerized RedwoodJS application
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml down

  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      REDWOOD_API_URL: ${{ secrets.REDWOOD_API_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker images
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml build
      - name: Start the Dockerized RedwoodJS application
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d
      - run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T api yarn rw prisma migrate deploy
      - run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T api yarn rw test api --no-watch
      - run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T api yarn rw test web --no-watch
      - name: Stopping the Dockerized RedwoodJS application
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml down
