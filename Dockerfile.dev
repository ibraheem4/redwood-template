# ==
# Base
# ==
FROM node:18-alpine as base
WORKDIR /app
COPY package.json yarn.lock redwood.toml graphql.config.js .
COPY api/package.json api/
COPY web/package.json web/
ENV HUSKY=0
RUN apk add --update --no-cache openssl1.1-compat && \
    yarn install --immutable --immutable-cache --network-timeout 1000000 --parallel && \
    yarn cache clean

# ==
# Build
# ==
FROM base as builder
COPY api/ /app/api/
COPY web/ /app/web/
COPY scripts/ /app/scripts/
RUN yarn global add @redwoodjs/cli && \
    yarn rw build api web && \
    yarn rw prisma generate

# ==
# Runners
# ==
# Runner for the Nginx web server
FROM nginx:alpine AS web
WORKDIR /usr/share/nginx/html
RUN rm -rf ./*
COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=builder /app/web/dist .
EXPOSE 8910
CMD ["nginx", "-g", "daemon off;"]

# Runner for the API server
FROM node:18-alpine AS api
WORKDIR /app
COPY --from=builder /app .
COPY entrypoint.dev.sh /app/
RUN chmod +x /app/entrypoint.dev.sh
EXPOSE 8911
CMD ["/app/entrypoint.dev.sh"]
